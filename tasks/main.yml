---
- name: Check Ansible Version
  fail:
    msg: "Ansible version detected is {{ ansible_version.full }}, please use version 2.5.8"
  when: ansible_version.full != "2.5.8"

- name: Assume ProductDomainAdmin Role
  sts_assume_role:
    role_arn: "{{ aws_pda_role_arn }}"
    mfa_serial_number: "{{ aws_mfa_serial | default(omit) }}"
    mfa_token: "{{ aws_mfa_token | default(omit) }}"
    region: "{{ aws_region }}"
    role_session_name: "{{ (lookup('env', 'USER') + '@' + ansible_product_name + '.' + ansible_product_serial) | regex_replace('[^\\w+=,.@-]', '-')}}"
  register: assumed_role

- name: Find AMI
  ec2_ami_facts:
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ aws_region }}"
    image_id: "{{ ami_id }}"
  register: ami

- name: AMI Found
  debug:
    msg: "{{ ami.images }}"
    verbosity: 3

- name: Error When Finding the AMI
  fail:
    msg: "Got {{ ami.images|length }} ami, expected 1. Please check `ami_id` parameter."
  when: ami.images|length != 1

- name: Find ASG
  ec2_asg_facts:
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ aws_region }}"
    name: "{{ asg_name }}"
  register: asg

- name: ASG Found
  debug:
    msg: "{{ asg.results }}"
    verbosity: 3

- name: Error When Finding the ASG
  fail:
    msg: "Got {{ asg.results|length }} asg, expected 1. Please check `asg_name` parameter."
  when: asg.results|length != 1

- name: Set Launch Configurations' Name
  set_fact:
    old_lc_name: "{{ asg.results[0].launch_configuration_name }}"
    new_lc_name: "{{ service_name }}-{{ cluster_role }}-{{ service_version }}-{{ service_environment }}-{{ launch_configuration_name_suffix }}"

- name: Find Old Launch Configuration
  ec2_lc_facts:
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ aws_region }}"
    name: "{{ old_lc_name }}"
  register: old_lc

- name: Launch Configuration Found
  debug:
    msg: "{{ old_lc.launch_configurations }}"
    verbosity: 3

- name: Error When Finding the Old Launch Configuration
  fail:
    msg: "Got {{ old_lc.launch_configurations|length }} lc, expected 1."
  when: old_lc.launch_configurations|length != 1

- name: Create New Launch Configuration
  ec2_lc:
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ aws_region }}"
    name: "{{ new_lc_name }}"
    image_id: "{{ ami.images[0].image_id }}"
    instance_type: "{{ instance_type | default(old_lc.launch_configurations[0].instance_type) }}"
    instance_profile_name: "{{ old_lc.launch_configurations[0].iam_instance_profile }}"
    key_name: "{{ old_lc.launch_configurations[0].key_name | default(omit) }}"
    security_groups: "{{ old_lc.launch_configurations[0].security_groups }}"
    user_data: "{{ instance_user_data }}"
    instance_monitoring: "{{ old_lc.launch_configurations[0].instance_monitoring.enabled }}"
    ebs_optimized: "{{ old_lc.launch_configurations[0].ebs_optimized }}"
    volumes:
    - device_name: "{{ ebs_device_name }}"
      volume_size: "{{ ebs_volume_size }}"
      volume_type: "{{ ebs_volume_type }}"
      delete_on_termination: "{{ ebs_delete_on_termination }}"

- name: Update the ASG
  ec2_asg:
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ aws_region }}"
    name: "{{ asg_name }}"
    launch_config_name: "{{ new_lc_name }}"
    max_size: "{{ asg_max_size | default(asg.results[0].max_size) }}"
    min_size: "{{ asg_min_size | default(asg.results[0].min_size) }}"
    desired_capacity: "{{ asg_desired_capacity | default(asg.results[0].desired_capacity) }}"
    health_check_type: "{{ asg_health_check_type | default(asg.results[0].health_check_type) }}"
    health_check_period: "{{ asg_health_check_grace_period | default(asg.results[0].health_check_grace_period) }}"
    replace_all_instances: yes
    replace_batch_size: "{{ asg_replace_batch_size | default(omit) }}"
    wait_timeout: "{{ asg_wait_timeout }}"

- name: Delete the Old Launch Configuration
  ec2_lc:
    aws_access_key: "{{ assumed_role.sts_creds.access_key }}"
    aws_secret_key: "{{ assumed_role.sts_creds.secret_key }}"
    security_token: "{{ assumed_role.sts_creds.session_token }}"
    region: "{{ aws_region }}"
    name: "{{ old_lc_name }}"
    state: absent
  when:
    - old_lc_name != new_lc_name
    - old_lc_name | search("-" + launch_configuration_name_suffix + "$")
